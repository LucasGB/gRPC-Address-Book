#!/usr/bin/env python
# -*- coding: utf-8 -*-
# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import agenda_pb2 as agenda__pb2


class AgendaStub(object):
  """interface de serviço
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.add_contact = channel.unary_unary(
        '/Agenda/add_contact',
        request_serializer=agenda__pb2.Contact.SerializeToString,
        response_deserializer=agenda__pb2.Reply.FromString,
        )


class AgendaServicer(object):
  """interface de serviço
  """

  def add_contact(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_AgendaServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'add_contact': grpc.unary_unary_rpc_method_handler(
          servicer.add_contact,
          request_deserializer=agenda__pb2.Contact.FromString,
          response_serializer=agenda__pb2.Reply.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'Agenda', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
